{"ast":null,"code":"import _asyncToGenerator from \"/home/emir/Desktop/dev/trivia-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet QuizComponent = class QuizComponent {\n  constructor(quizService, sharedService) {\n    this.quizService = quizService;\n    this.sharedService = sharedService;\n    this.category = \"\";\n    this.difficulty = \"\";\n    this.counter = 0;\n    this.correctAnswers = 0;\n    this.correct = 0;\n  }\n\n  getQuiz() {\n    this.category = this.sharedService.getCategory();\n    this.difficulty = this.sharedService.getDifficulty();\n    this.quizService.getQuiz(10, 0, this.category, this.difficulty).subscribe(quiz => {\n      this.quiz = quiz;\n      this.questions = quiz.questions;\n      this.currentQuestion = this.questions[0];\n      this.answers.concat(this.currentQuestion.correctAnswer);\n      this.answers.concat(this.currentQuestion.incorrectAnswers);\n    });\n  }\n\n  nextQuestion(answer) {\n    if (this.questions[this.counter].correctAnswer == answer) {\n      this.correct++;\n    }\n\n    if (this.questions.length != this.counter + 1) {\n      console.log(this.correct);\n      this.counter++;\n    } else this.finishQuiz();\n  }\n\n  finishQuiz() {\n    console.log(this.correct + \"/\" + this.questions.length);\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.getQuiz();\n    })();\n  }\n\n};\nQuizComponent = __decorate([Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})], QuizComponent);\nexport { QuizComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,QAAkC,eAAlC;AAcA,IAAaC,aAAa,GAA1B,MAAaA,aAAb,CAA0B;EAYxBC,YAAoBC,WAApB,EAAoDC,aAApD,EAAgF;IAA5D;IAAgC;IAVpD,gBAAmB,EAAnB;IACA,kBAAqB,EAArB;IAGA,eAAe,CAAf;IAEA,sBAAsB,CAAtB;IAEA,eAAe,CAAf;EAKC;;EAEAC,OAAO;IACN,KAAKC,QAAL,GAAgB,KAAKF,aAAL,CAAmBG,WAAnB,EAAhB;IACA,KAAKC,UAAL,GAAkB,KAAKJ,aAAL,CAAmBK,aAAnB,EAAlB;IACA,KAAKN,WAAL,CAAiBE,OAAjB,CAAyB,EAAzB,EAA4B,CAA5B,EAA8B,KAAKC,QAAnC,EAA6C,KAAKE,UAAlD,EAA8DE,SAA9D,CAAyEC,IAAD,IAAqB;MAEzF,KAAKA,IAAL,GAAUA,IAAV;MACA,KAAKC,SAAL,GAAeD,IAAI,CAACC,SAApB;MACA,KAAKC,eAAL,GAAqB,KAAKD,SAAL,CAAe,CAAf,CAArB;MACA,KAAKE,OAAL,CAAaC,MAAb,CAAoB,KAAKF,eAAL,CAAqBG,aAAzC;MACA,KAAKF,OAAL,CAAaC,MAAb,CAAoB,KAAKF,eAAL,CAAqBI,gBAAzC;IACH,CAPD;EASD;;EACDC,YAAY,CAACC,MAAD,EAAW;IAErB,IAAG,KAAKP,SAAL,CAAe,KAAKQ,OAApB,EAA6BJ,aAA7B,IAA4CG,MAA/C,EACA;MACG,KAAKE,OAAL;IACF;;IACD,IAAG,KAAKT,SAAL,CAAeU,MAAf,IAAuB,KAAKF,OAAL,GAAa,CAAvC,EACA;MAECG,OAAO,CAACC,GAAR,CAAY,KAAKH,OAAjB;MACA,KAAKD,OAAL;IAEA,CAND,MAQA,KAAKK,UAAL;EAED;;EAIDA,UAAU;IAERF,OAAO,CAACC,GAAR,CAAY,KAAKH,OAAL,GAAa,GAAb,GAAiB,KAAKT,SAAL,CAAeU,MAA5C;EAED;;EAGKI,QAAQ;IAAA;;IAAA;MACZ,MAAM,KAAI,CAACrB,OAAL,EAAN;IADY;EAIb;;AA7DuB,CAA1B;AAAaJ,aAAa,eALzBD,SAAS,CAAC;EACT2B,QAAQ,EAAE,UADD;EAETC,WAAW,EAAE,uBAFJ;EAGTC,SAAS,EAAE,CAAC,sBAAD;AAHF,CAAD,CAKgB,GAAb5B,aAAa,CAAb;SAAAA","names":["Component","QuizComponent","constructor","quizService","sharedService","getQuiz","category","getCategory","difficulty","getDifficulty","subscribe","quiz","questions","currentQuestion","answers","concat","correctAnswer","incorrectAnswers","nextQuestion","answer","counter","correct","length","console","log","finishQuiz","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/emir/Desktop/dev/trivia-fe/src/app/pages/quiz/quiz.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SharedService } from '../service/shared.service'\nimport { QuizService } from '../service/quiz-service/quiz.service'\nimport { Observable, lastValueFrom } from 'rxjs';\nimport { Question } from '../model/Question';\nimport { QuizResponse } from '../model/QuizResponse';\n\n\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})\nexport class QuizComponent implements OnInit {\n\n  category: string = \"\";\n  difficulty: string = \"\";\n  quiz: QuizResponse;\n  questions: Question[];\n  counter:number=0;\n  currentQuestion:Question;\n  correctAnswers:number=0;\n  answers:String[];\n  correct:number=0;\n\n  constructor(private quizService:QuizService,private sharedService: SharedService) { \n   \n  \n  }\n\n   getQuiz() {\n    this.category = this.sharedService.getCategory();\n    this.difficulty = this.sharedService.getDifficulty();\n    this.quizService.getQuiz(10,0,this.category, this.difficulty).subscribe((quiz:QuizResponse)=>{\n\n        this.quiz=quiz;\n        this.questions=quiz.questions;\n        this.currentQuestion=this.questions[0];\n        this.answers.concat(this.currentQuestion.correctAnswer);\n        this.answers.concat(this.currentQuestion.incorrectAnswers);\n    });\n   \n  }\n  nextQuestion(answer:any)\n  {\n    if(this.questions[this.counter].correctAnswer==answer)\n    {\n       this.correct++;\n    }\n    if(this.questions.length!=this.counter+1)\n    {\n     \n     console.log(this.correct);\n     this.counter++;\n    \n    }\n    else\n    this.finishQuiz();\n   \n  }\n    \n    \n  \n  finishQuiz()\n  {\n    console.log(this.correct+\"/\"+this.questions.length);\n\n  }\n  \n \n  async ngOnInit():Promise<void> {\n    await this.getQuiz();\n\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}